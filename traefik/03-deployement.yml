apiVersion: v1
kind: ServiceAccount
metadata:
  namespace: kube-system
  name: traefik-ingress-controller

---
kind: Deployment
apiVersion: apps/v1
metadata:
  namespace: kube-system
  name: traefik
  labels:
    app.kubernetes.io/name: traefik
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: traefik
  strategy:
    type: RollingUpdate
    rollingUpdate:
      # We have a replicas to 1, we dont want any Traefik becomes unavailable
      maxUnavailable: 0
      maxSurge: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: traefik
    spec:
      serviceAccountName: traefik-ingress-controller
      initContainers:
        - name: volume-permissions
          image: busybox:1.32.0
          imagePullPolicy: IfNotPresent
          command: ["sh", "-c", "chmod -Rv 600 /data/*"]
          volumeMounts:
            - name: traefik-acme-storage
              mountPath: /data
      containers:
        - name: traefik
          image: traefik:v2.3.1
          imagePullPolicy: IfNotPresent
          args:
            # Define entrypoints
            - --entryPoints.traefik.address=:8080
            - --entryPoints.metrics.address=:9000
            - --entryPoints.web.address=:8000
            - --entryPoints.websecure.address=:8443

            # Enable dashboard
            - --api.dashboard=true
            - --api.insecure=true

            # Enable access logs
            - --accesslog=true

            # Enable Prometheus metrics
            - --metrics.prometheus=true
            - --metrics.prometheus.addEntryPointsLabels=true
            - --metrics.prometheus.addServicesLabels=true

            # Define metrics endpoint
            - --metrics.prometheus.entryPoint=metrics

            # Enable /ping health check
            - --ping=true

            # Use Kubernetes CRD as service discovery
            - --providers.kubernetescrd

            # HTTPS config
            - --certificatesresolvers.myresolver.acme.storage=/certificates/acme.json
            - --certificatesresolvers.myresolver.acme.email=contact@skynewz.dev
            # - --certificatesresolvers.myresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory
            - --certificatesresolvers.myresolver.acme.dnschallenge=true
            - --certificatesresolvers.myresolver.acme.dnschallenge.provider=scaleway
            - --certificatesresolvers.myresolver.acme.dnschallenge.delaybeforecheck=5
            - --certificatesresolvers.myresolver.acme.dnschallenge.resolvers=195.154.228.249:53,62.210.16.9:53,1.1.1.1:53 # Scaleway DNS and fallback to CloudFare
            - --entrypoints.websecure.http.tls.certresolver=myresolver
            - --entrypoints.websecure.http.tls.domains[0].main=skynewz.cloud
            - --entrypoints.websecure.http.tls.domains[0].sans=*.skynewz.cloud

            # HTTP -> HTTPS
            - --entrypoints.web.http.redirections.entrypoint.permanent=true
            - --entrypoints.web.http.redirections.entrypoint.scheme=https
            - --entrypoints.web.http.redirections.entrypoint.to=:443
          volumeMounts:
            - mountPath: /certificates
              name: traefik-acme-storage
              readOnly: false
          env:
            - name: SCALEWAY_API_TOKEN
              value: [REDACTED]
          ports:
            - name: web
              containerPort: 8000
            - name: websecure
              containerPort: 8443
            - name: traefik
              containerPort: 8080
            - name: metrics
              containerPort: 9000
          resources:
            requests:
              cpu: "500m"
              memory: "50Mi"
            limits:
              cpu: "750m"
              memory: "100Mi"
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /ping
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          readinessProbe:
            failureThreshold: 1
            httpGet:
              path: /ping
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          securityContext:
            runAsNonRoot: true
            runAsGroup: 65534
            runAsUser: 65534
      terminationGracePeriodSeconds: 60
      restartPolicy: Always
      securityContext:
        fsGroup: 65534
      volumes:
        - name: traefik-acme-storage
          persistentVolumeClaim:
            claimName: traefik-acme-storage-pvc
